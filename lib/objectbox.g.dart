// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;

import 'src/objectbox/entity/address.entity.dart';
import 'src/objectbox/entity/address_book.entity.dart';
import 'src/objectbox/entity/balance.entity.dart';
import 'src/objectbox/entity/block_header.entity.dart';
import 'src/objectbox/entity/custom_id.entity.dart';
import 'src/objectbox/entity/transaction.entity.dart';
import 'src/objectbox/entity/utxo.entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 3220732583961142079),
      name: 'BalanceEntity',
      lastPropertyId: const obx_int.IdUid(4, 3441074007408566163),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5264758582055787579),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 862507232015876285),
            name: 'walletId',
            type: 6,
            flags: 32808,
            indexId: const obx_int.IdUid(1, 394746069799629371)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7493138556218271637),
            name: 'confirmed',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3441074007408566163),
            name: 'unconfirmed',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 3759509871047798880),
      name: 'CustomIdEntity',
      lastPropertyId: const obx_int.IdUid(3, 5086404098091924774),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7750921661301238104),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3027566865642973939),
            name: 'entityName',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(2, 3791467954964725200)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5086404098091924774),
            name: 'customId',
            type: 6,
            flags: 40,
            indexId: const obx_int.IdUid(3, 8007281948525624720))
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 7794868067585953334),
      name: 'TransactionEntity',
      lastPropertyId: const obx_int.IdUid(20, 4417044787148767451),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7788969901169807542),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 388742004047335959),
            name: 'walletId',
            type: 6,
            flags: 8,
            indexId: const obx_int.IdUid(4, 4983027317271226799)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6339675601966332342),
            name: 'txHash',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(5, 6407762134708430854)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 8517529334814690835),
            name: 'timestamp',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 293862145943321531),
            name: 'height',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 8119215398226732551),
            name: 'memo',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 8456646081991141806),
            name: 'txString',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(20, 4417044787148767451),
            name: 'prevTxStringList',
            type: 30,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 4061244831385219718),
      name: 'UtxoEntity',
      lastPropertyId: const obx_int.IdUid(10, 4484015554730755099),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8762475499972691670),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7094621954658817009),
            name: 'walletId',
            type: 6,
            flags: 8,
            indexId: const obx_int.IdUid(6, 6438377845351112241)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2304847001104232626),
            name: 'amount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1905995683499858618),
            name: 'txHash',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(9, 5339900761121145130)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 1544112200200282659),
            name: 'txString',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 414654322966790498),
            name: 'derivationPath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 3126982739545512885),
            name: 'timestamp',
            type: 6,
            flags: 8,
            indexId: const obx_int.IdUid(7, 5077403498887267828)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 8713968426652162459),
            name: 'height',
            type: 6,
            flags: 8,
            indexId: const obx_int.IdUid(8, 3423775508727805039)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 4484015554730755099),
            name: 'index',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 8613697836742028567),
      name: 'AddressBookEntity',
      lastPropertyId: const obx_int.IdUid(8, 4550916587390190643),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7984014725105713067),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8187682209501038908),
            name: 'walletId',
            type: 6,
            flags: 8,
            indexId: const obx_int.IdUid(10, 3414587434820625515)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3301821935114167011),
            name: 'usedReceiveIndex',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4687312288283581178),
            name: 'usedChangeIndex',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 7615072902791798580),
            name: 'maxReceiveIndex',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 4550916587390190643),
            name: 'maxChangeIndex',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'receiveList',
            srcEntity: 'AddressEntity',
            srcField: 'receiveBook'),
        obx_int.ModelBacklink(
            name: 'changeList',
            srcEntity: 'AddressEntity',
            srcField: 'changeBook')
      ]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 8080004504152520898),
      name: 'AddressEntity',
      lastPropertyId: const obx_int.IdUid(10, 6112046490819903026),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2563061599432711927),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6477364040328463887),
            name: 'address',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(14, 4838388030003956848)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5032884849676808917),
            name: 'isUsed',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 201575580777935165),
            name: 'derivationPath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7971289321499449144),
            name: 'index',
            type: 6,
            flags: 8,
            indexId: const obx_int.IdUid(15, 6083869653038324813)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 5586885848966256952),
            name: 'amount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 6998623694660580683),
            name: 'receiveBookId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(12, 2041579441595753872),
            relationTarget: 'AddressBookEntity'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 6112046490819903026),
            name: 'changeBookId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(16, 5705262786308739270),
            relationTarget: 'AddressBookEntity')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(8, 1321522893906521),
      name: 'BlockHeaderEntity',
      lastPropertyId: const obx_int.IdUid(9, 6822508289222825805),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1928440160668084859),
            name: 'height',
            type: 6,
            flags: 8,
            indexId: const obx_int.IdUid(17, 3461793587829198156)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 1499234575959545497),
            name: 'timestamp',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 3214784347516911552),
            name: 'header',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 6822508289222825805),
            name: 'id',
            type: 6,
            flags: 129)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
obx.Store openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) {
  return obx.Store(getObjectBoxModel(),
      directory: directory,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(8, 1321522893906521),
      lastIndexId: const obx_int.IdUid(17, 3461793587829198156),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [2381628115515223792],
      retiredIndexUids: const [927457567277192811, 7190226889726495679],
      retiredPropertyUids: const [
        2082853370630407026,
        3787654551321118053,
        555206657317986240,
        543019621523373727,
        2644727640841934980,
        6911630227421674828,
        6768387378242620461,
        4624132071919602945,
        3973253657269623062,
        3587362984716778445,
        2968442095114589264,
        5897124054083615261,
        8427218409312396234,
        1444194401725858231,
        3252764741833519027,
        7008668093213072062,
        5152500756602920754,
        6192622211449534308,
        3580523402327924597,
        7032305156211209973,
        8272795738351195459,
        5888821965583705068,
        7959915101849957970,
        5809406994053261366,
        6403201004975698954
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    BalanceEntity: obx_int.EntityDefinition<BalanceEntity>(
        model: _entities[0],
        toOneRelations: (BalanceEntity object) => [],
        toManyRelations: (BalanceEntity object) => {},
        getId: (BalanceEntity object) => object.id,
        setId: (BalanceEntity object, int id) {
          object.id = id;
        },
        objectToFB: (BalanceEntity object, fb.Builder fbb) {
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.walletId);
          fbb.addInt64(2, object.confirmed);
          fbb.addInt64(3, object.unconfirmed);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final walletIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final confirmedParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final unconfirmedParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final object = BalanceEntity(
              walletId: walletIdParam,
              confirmed: confirmedParam,
              unconfirmed: unconfirmedParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    CustomIdEntity: obx_int.EntityDefinition<CustomIdEntity>(
        model: _entities[1],
        toOneRelations: (CustomIdEntity object) => [],
        toManyRelations: (CustomIdEntity object) => {},
        getId: (CustomIdEntity object) => object.id,
        setId: (CustomIdEntity object, int id) {
          object.id = id;
        },
        objectToFB: (CustomIdEntity object, fb.Builder fbb) {
          final entityNameOffset = fbb.writeString(object.entityName);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, entityNameOffset);
          fbb.addInt64(2, object.customId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final entityNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final customIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final object = CustomIdEntity(entityNameParam, customIdParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    TransactionEntity: obx_int.EntityDefinition<TransactionEntity>(
        model: _entities[2],
        toOneRelations: (TransactionEntity object) => [],
        toManyRelations: (TransactionEntity object) => {},
        getId: (TransactionEntity object) => object.id,
        setId: (TransactionEntity object, int id) {
          object.id = id;
        },
        objectToFB: (TransactionEntity object, fb.Builder fbb) {
          final txHashOffset = fbb.writeString(object.txHash);
          final memoOffset = fbb.writeString(object.memo);
          final txStringOffset = fbb.writeString(object.txString);
          final prevTxStringListOffset = fbb.writeList(object.prevTxStringList
              .map(fbb.writeString)
              .toList(growable: false));
          fbb.startTable(21);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.walletId);
          fbb.addOffset(2, txHashOffset);
          fbb.addInt64(3, object.timestamp);
          fbb.addInt64(4, object.height);
          fbb.addOffset(10, memoOffset);
          fbb.addOffset(11, txStringOffset);
          fbb.addOffset(19, prevTxStringListOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final walletIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final txHashParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final txStringParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 26, '');
          final prevTxStringListParam = const fb.ListReader<String>(
                  fb.StringReader(asciiOptimization: true),
                  lazy: false)
              .vTableGet(buffer, rootOffset, 42, []);
          final timestampParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 10);
          final heightParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 12);
          final object = TransactionEntity(
              walletId: walletIdParam,
              txHash: txHashParam,
              txString: txStringParam,
              prevTxStringList: prevTxStringListParam,
              timestamp: timestampParam,
              height: heightParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..memo = const fb.StringReader(asciiOptimization: true)
                .vTableGet(buffer, rootOffset, 24, '');

          return object;
        }),
    UtxoEntity: obx_int.EntityDefinition<UtxoEntity>(
        model: _entities[3],
        toOneRelations: (UtxoEntity object) => [],
        toManyRelations: (UtxoEntity object) => {},
        getId: (UtxoEntity object) => object.id,
        setId: (UtxoEntity object, int id) {
          object.id = id;
        },
        objectToFB: (UtxoEntity object, fb.Builder fbb) {
          final txHashOffset = fbb.writeString(object.txHash);
          final txStringOffset = fbb.writeString(object.txString);
          final derivationPathOffset = fbb.writeString(object.derivationPath);
          fbb.startTable(11);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.walletId);
          fbb.addInt64(2, object.amount);
          fbb.addOffset(3, txHashOffset);
          fbb.addOffset(5, txStringOffset);
          fbb.addOffset(6, derivationPathOffset);
          fbb.addInt64(7, object.timestamp);
          fbb.addInt64(8, object.height);
          fbb.addInt64(9, object.index);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final walletIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final txHashParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final amountParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final indexParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          final txStringParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final derivationPathParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 16, '');
          final timestampParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final heightParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          final object = UtxoEntity(
              walletId: walletIdParam,
              txHash: txHashParam,
              amount: amountParam,
              index: indexParam,
              txString: txStringParam,
              derivationPath: derivationPathParam,
              timestamp: timestampParam,
              height: heightParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    AddressBookEntity: obx_int.EntityDefinition<AddressBookEntity>(
        model: _entities[4],
        toOneRelations: (AddressBookEntity object) => [],
        toManyRelations: (AddressBookEntity object) => {
              obx_int.RelInfo<AddressEntity>.toOneBacklink(8, object.id,
                      (AddressEntity srcObject) => srcObject.receiveBook):
                  object.receiveList,
              obx_int.RelInfo<AddressEntity>.toOneBacklink(10, object.id,
                      (AddressEntity srcObject) => srcObject.changeBook):
                  object.changeList
            },
        getId: (AddressBookEntity object) => object.id,
        setId: (AddressBookEntity object, int id) {
          object.id = id;
        },
        objectToFB: (AddressBookEntity object, fb.Builder fbb) {
          fbb.startTable(9);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.walletId);
          fbb.addInt64(4, object.usedReceiveIndex);
          fbb.addInt64(5, object.usedChangeIndex);
          fbb.addInt64(6, object.maxReceiveIndex);
          fbb.addInt64(7, object.maxChangeIndex);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final walletIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final object = AddressBookEntity(walletId: walletIdParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..usedReceiveIndex =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0)
            ..usedChangeIndex =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0)
            ..maxReceiveIndex =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0)
            ..maxChangeIndex =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          obx_int.InternalToManyAccess.setRelInfo<AddressBookEntity>(
              object.receiveList,
              store,
              obx_int.RelInfo<AddressEntity>.toOneBacklink(8, object.id,
                  (AddressEntity srcObject) => srcObject.receiveBook));
          obx_int.InternalToManyAccess.setRelInfo<AddressBookEntity>(
              object.changeList,
              store,
              obx_int.RelInfo<AddressEntity>.toOneBacklink(10, object.id,
                  (AddressEntity srcObject) => srcObject.changeBook));
          return object;
        }),
    AddressEntity: obx_int.EntityDefinition<AddressEntity>(
        model: _entities[5],
        toOneRelations: (AddressEntity object) =>
            [object.receiveBook, object.changeBook],
        toManyRelations: (AddressEntity object) => {},
        getId: (AddressEntity object) => object.id,
        setId: (AddressEntity object, int id) {
          object.id = id;
        },
        objectToFB: (AddressEntity object, fb.Builder fbb) {
          final addressOffset = fbb.writeString(object.address);
          final derivationPathOffset = fbb.writeString(object.derivationPath);
          fbb.startTable(11);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, addressOffset);
          fbb.addBool(2, object.isUsed);
          fbb.addOffset(3, derivationPathOffset);
          fbb.addInt64(4, object.index);
          fbb.addInt64(5, object.amount);
          fbb.addInt64(7, object.receiveBook.targetId);
          fbb.addInt64(9, object.changeBook.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final addressParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final isUsedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 8, false);
          final derivationPathParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 10, '');
          final indexParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final amountParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final object = AddressEntity(
              address: addressParam,
              isUsed: isUsedParam,
              derivationPath: derivationPathParam,
              index: indexParam,
              amount: amountParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.receiveBook.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          object.receiveBook.attach(store);
          object.changeBook.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          object.changeBook.attach(store);
          return object;
        }),
    BlockHeaderEntity: obx_int.EntityDefinition<BlockHeaderEntity>(
        model: _entities[6],
        toOneRelations: (BlockHeaderEntity object) => [],
        toManyRelations: (BlockHeaderEntity object) => {},
        getId: (BlockHeaderEntity object) => object.id,
        setId: (BlockHeaderEntity object, int id) {
          object.id = id;
        },
        objectToFB: (BlockHeaderEntity object, fb.Builder fbb) {
          final headerOffset = fbb.writeString(object.header);
          fbb.startTable(10);
          fbb.addInt64(0, object.height);
          fbb.addInt64(4, object.timestamp);
          fbb.addOffset(7, headerOffset);
          fbb.addInt64(8, object.id);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final heightParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final timestampParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final headerParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 18, '');
          final object = BlockHeaderEntity(
              heightParam, timestampParam, headerParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [BalanceEntity] entity fields to define ObjectBox queries.
class BalanceEntity_ {
  /// See [BalanceEntity.id].
  static final id =
      obx.QueryIntegerProperty<BalanceEntity>(_entities[0].properties[0]);

  /// See [BalanceEntity.walletId].
  static final walletId =
      obx.QueryIntegerProperty<BalanceEntity>(_entities[0].properties[1]);

  /// See [BalanceEntity.confirmed].
  static final confirmed =
      obx.QueryIntegerProperty<BalanceEntity>(_entities[0].properties[2]);

  /// See [BalanceEntity.unconfirmed].
  static final unconfirmed =
      obx.QueryIntegerProperty<BalanceEntity>(_entities[0].properties[3]);
}

/// [CustomIdEntity] entity fields to define ObjectBox queries.
class CustomIdEntity_ {
  /// See [CustomIdEntity.id].
  static final id =
      obx.QueryIntegerProperty<CustomIdEntity>(_entities[1].properties[0]);

  /// See [CustomIdEntity.entityName].
  static final entityName =
      obx.QueryStringProperty<CustomIdEntity>(_entities[1].properties[1]);

  /// See [CustomIdEntity.customId].
  static final customId =
      obx.QueryIntegerProperty<CustomIdEntity>(_entities[1].properties[2]);
}

/// [TransactionEntity] entity fields to define ObjectBox queries.
class TransactionEntity_ {
  /// See [TransactionEntity.id].
  static final id =
      obx.QueryIntegerProperty<TransactionEntity>(_entities[2].properties[0]);

  /// See [TransactionEntity.walletId].
  static final walletId =
      obx.QueryIntegerProperty<TransactionEntity>(_entities[2].properties[1]);

  /// See [TransactionEntity.txHash].
  static final txHash =
      obx.QueryStringProperty<TransactionEntity>(_entities[2].properties[2]);

  /// See [TransactionEntity.timestamp].
  static final timestamp =
      obx.QueryIntegerProperty<TransactionEntity>(_entities[2].properties[3]);

  /// See [TransactionEntity.height].
  static final height =
      obx.QueryIntegerProperty<TransactionEntity>(_entities[2].properties[4]);

  /// See [TransactionEntity.memo].
  static final memo =
      obx.QueryStringProperty<TransactionEntity>(_entities[2].properties[5]);

  /// See [TransactionEntity.txString].
  static final txString =
      obx.QueryStringProperty<TransactionEntity>(_entities[2].properties[6]);

  /// See [TransactionEntity.prevTxStringList].
  static final prevTxStringList =
      obx.QueryStringVectorProperty<TransactionEntity>(
          _entities[2].properties[7]);
}

/// [UtxoEntity] entity fields to define ObjectBox queries.
class UtxoEntity_ {
  /// See [UtxoEntity.id].
  static final id =
      obx.QueryIntegerProperty<UtxoEntity>(_entities[3].properties[0]);

  /// See [UtxoEntity.walletId].
  static final walletId =
      obx.QueryIntegerProperty<UtxoEntity>(_entities[3].properties[1]);

  /// See [UtxoEntity.amount].
  static final amount =
      obx.QueryIntegerProperty<UtxoEntity>(_entities[3].properties[2]);

  /// See [UtxoEntity.txHash].
  static final txHash =
      obx.QueryStringProperty<UtxoEntity>(_entities[3].properties[3]);

  /// See [UtxoEntity.txString].
  static final txString =
      obx.QueryStringProperty<UtxoEntity>(_entities[3].properties[4]);

  /// See [UtxoEntity.derivationPath].
  static final derivationPath =
      obx.QueryStringProperty<UtxoEntity>(_entities[3].properties[5]);

  /// See [UtxoEntity.timestamp].
  static final timestamp =
      obx.QueryIntegerProperty<UtxoEntity>(_entities[3].properties[6]);

  /// See [UtxoEntity.height].
  static final height =
      obx.QueryIntegerProperty<UtxoEntity>(_entities[3].properties[7]);

  /// See [UtxoEntity.index].
  static final index =
      obx.QueryIntegerProperty<UtxoEntity>(_entities[3].properties[8]);
}

/// [AddressBookEntity] entity fields to define ObjectBox queries.
class AddressBookEntity_ {
  /// See [AddressBookEntity.id].
  static final id =
      obx.QueryIntegerProperty<AddressBookEntity>(_entities[4].properties[0]);

  /// See [AddressBookEntity.walletId].
  static final walletId =
      obx.QueryIntegerProperty<AddressBookEntity>(_entities[4].properties[1]);

  /// See [AddressBookEntity.usedReceiveIndex].
  static final usedReceiveIndex =
      obx.QueryIntegerProperty<AddressBookEntity>(_entities[4].properties[2]);

  /// See [AddressBookEntity.usedChangeIndex].
  static final usedChangeIndex =
      obx.QueryIntegerProperty<AddressBookEntity>(_entities[4].properties[3]);

  /// See [AddressBookEntity.maxReceiveIndex].
  static final maxReceiveIndex =
      obx.QueryIntegerProperty<AddressBookEntity>(_entities[4].properties[4]);

  /// See [AddressBookEntity.maxChangeIndex].
  static final maxChangeIndex =
      obx.QueryIntegerProperty<AddressBookEntity>(_entities[4].properties[5]);

  /// see [AddressBookEntity.receiveList]
  static final receiveList =
      obx.QueryBacklinkToMany<AddressEntity, AddressBookEntity>(
          AddressEntity_.receiveBook);

  /// see [AddressBookEntity.changeList]
  static final changeList =
      obx.QueryBacklinkToMany<AddressEntity, AddressBookEntity>(
          AddressEntity_.changeBook);
}

/// [AddressEntity] entity fields to define ObjectBox queries.
class AddressEntity_ {
  /// See [AddressEntity.id].
  static final id =
      obx.QueryIntegerProperty<AddressEntity>(_entities[5].properties[0]);

  /// See [AddressEntity.address].
  static final address =
      obx.QueryStringProperty<AddressEntity>(_entities[5].properties[1]);

  /// See [AddressEntity.isUsed].
  static final isUsed =
      obx.QueryBooleanProperty<AddressEntity>(_entities[5].properties[2]);

  /// See [AddressEntity.derivationPath].
  static final derivationPath =
      obx.QueryStringProperty<AddressEntity>(_entities[5].properties[3]);

  /// See [AddressEntity.index].
  static final index =
      obx.QueryIntegerProperty<AddressEntity>(_entities[5].properties[4]);

  /// See [AddressEntity.amount].
  static final amount =
      obx.QueryIntegerProperty<AddressEntity>(_entities[5].properties[5]);

  /// See [AddressEntity.receiveBook].
  static final receiveBook =
      obx.QueryRelationToOne<AddressEntity, AddressBookEntity>(
          _entities[5].properties[6]);

  /// See [AddressEntity.changeBook].
  static final changeBook =
      obx.QueryRelationToOne<AddressEntity, AddressBookEntity>(
          _entities[5].properties[7]);
}

/// [BlockHeaderEntity] entity fields to define ObjectBox queries.
class BlockHeaderEntity_ {
  /// See [BlockHeaderEntity.height].
  static final height =
      obx.QueryIntegerProperty<BlockHeaderEntity>(_entities[6].properties[0]);

  /// See [BlockHeaderEntity.timestamp].
  static final timestamp =
      obx.QueryIntegerProperty<BlockHeaderEntity>(_entities[6].properties[1]);

  /// See [BlockHeaderEntity.header].
  static final header =
      obx.QueryStringProperty<BlockHeaderEntity>(_entities[6].properties[2]);

  /// See [BlockHeaderEntity.id].
  static final id =
      obx.QueryIntegerProperty<BlockHeaderEntity>(_entities[6].properties[3]);
}
